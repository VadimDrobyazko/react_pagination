{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","buttonsAll","Math","ceil","buttonsCount","firstPage","lastPage","className","cn","disabled","href","onClick","map","number","active","items","App","useState","setCurrentPage","setPerPage","lastPostIndex","firstPostIndex","itemsData","slice","totalItem","length","id","value","onChange","event","parseInt","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCGIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAaC,KAAKC,KAAKN,EAAQC,GAC/BM,EAAed,EAAW,EAAGW,GAC7BI,EAA4B,IAAhBN,EACZO,EAAWP,IAAgBE,EAcjC,OACE,qBAAIM,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAG,YAAa,CAAEC,SAAUJ,IAA3C,SACE,mBACE,UAAQ,WACRE,UAAU,YACVG,KAAK,QACLC,QAnBqB,WACtBN,GACHL,EAAaD,EAAc,IAkBvB,gBAAeM,EALjB,oBAWDD,EAAaQ,KAAI,SAAAC,GAAM,OACtB,oBACEN,UAAWC,IAAG,YAAa,CACzBM,OAAQD,IAAWd,IAFvB,SAME,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMX,EAAaa,IAJ9B,SAMGA,KAREA,MAaT,oBAAIN,UAAWC,IAAG,YAAa,CAAEC,SAAUH,IAA3C,SACE,mBACE,UAAQ,WACRC,UAAU,YACVG,KAAK,QACLC,QA3CoB,WACrBL,GACHN,EAAaD,EAAc,IA0CvB,gBAAeO,EALjB,wBC5DFS,EAAQzB,EAAW,EAAG,IAAIsB,KAAI,SAAClB,GAAD,qBAAeA,MAEtCsB,EAAgB,WAC3B,MAAsCC,mBAAS,GAA/C,mBAAOlB,EAAP,KAAoBmB,EAApB,KACA,EAA8BD,mBAAS,GAAvC,mBAAOnB,EAAP,KAAgBqB,EAAhB,KAEMC,EAAgBrB,EAAcD,EAC9BuB,EAAiBD,EAAgBtB,EACjCwB,EAAYP,EAAMQ,MAAMF,EAAgBD,GACxCI,EAAYT,EAAMU,OAaxB,OACE,sBAAKlB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWR,EADX,mBACiCsB,EADjC,cACqDD,EADrD,eACyEI,EADzE,OAIA,sBAAKjB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRmB,GAAG,kBACHnB,UAAU,eACVoB,MAAO7B,EACP8B,SA1B8D,SACtEC,GAEAV,EAAWW,SAASD,EAAME,OAAOJ,MAAO,KACxCT,EAAe,IAiBT,UAOE,wBAAQS,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOK,QAAQ,kBAAkBzB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEV,MAAO2B,EACP1B,QAASA,EACTC,YAAaA,EACbC,aArCmB,SAACa,GACxBK,EAAeL,MAuCb,6BACGS,EAAUV,KAAI,SAACqB,GACd,OACE,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YChEpCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.ca61545b.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (number: number) => void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const buttonsAll = Math.ceil(total / perPage);\n  const buttonsCount = getNumbers(1, buttonsAll);\n  const firstPage = currentPage === 1;\n  const lastPage = currentPage === buttonsAll;\n\n  const handleClickFirstPage = () => {\n    if (!firstPage) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const handleClickLastPage = () => {\n    if (!lastPage) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn('page-item', { disabled: firstPage })}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          onClick={handleClickFirstPage}\n          aria-disabled={firstPage}\n        >\n          «\n        </a>\n      </li>\n\n      {buttonsCount.map(number => (\n        <li\n          className={cn('page-item', {\n            active: number === currentPage,\n          })}\n          key={number}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${number}`}\n            onClick={() => onPageChange(number)}\n          >\n            {number}\n          </a>\n        </li>\n      ))}\n\n      <li className={cn('page-item', { disabled: lastPage })}>\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          onClick={handleClickLastPage}\n          aria-disabled={lastPage}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42).map((n) => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [perPage, setPerPage] = useState(5);\n\n  const lastPostIndex = currentPage * perPage;\n  const firstPostIndex = lastPostIndex - perPage;\n  const itemsData = items.slice(firstPostIndex, lastPostIndex);\n  const totalItem = items.length;\n\n  const handleSelectChange: React.ChangeEventHandler<HTMLSelectElement> = (\n    event,\n  ) => {\n    setPerPage(parseInt(event.target.value, 10));\n    setCurrentPage(1);\n  };\n\n  const handlePageChange = (number: number) => {\n    setCurrentPage(number);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstPostIndex} - ${lastPostIndex} of ${totalItem})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={handleSelectChange}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={totalItem}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={handlePageChange}\n      />\n\n      <ul>\n        {itemsData.map((item) => {\n          return (\n            <li data-cy=\"item\" key={item}>\n              {item}\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}